<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/06/hello-world/"/>
    <url>/2023/08/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown 常見語法整理</title>
    <link href="/2023/08/05/markdown-syntax/"/>
    <url>/2023/08/05/markdown-syntax/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Markdown 是一種標記語言，允許使用者使用簡單的標記，就能寫出排版工整，畫面整齊俐落的文章。不用記住繁雜的語法，讓使用者可以更專注在寫作內容，而且源文件人類容易閱讀，不會被複雜格式擾亂。</p><p>Markdown檔案可以輕鬆轉變為HTML 文件在網頁上呈現，很適合用來寫部落格。這邊整理幾個常用的標記語法。</p><h1 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h1><p>使用 <code># 標題</code> (# 與 文字間需要空一個)，會對應到HTML 中 H1~H6 的標題大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 標題     (H1)</span><br><span class="hljs-comment">##  標題</span><br><span class="hljs-comment">###  標題</span><br><span class="hljs-comment">####  標題</span><br><span class="hljs-comment">#####  標題</span><br><span class="hljs-comment">###### 標題 (H6)</span><br><br></code></pre></td></tr></table></figure><h1 id="反白字體"><a href="#反白字體" class="headerlink" title="反白字體"></a>反白字體</h1><p>使用&#96;&#96; 包住文字(調成英文輸入比較方便)，就能有反白效果</p><p><code>反白文字</code></p><h1 id="項目"><a href="#項目" class="headerlink" title="項目"></a>項目</h1><p>使用 <code>- 項目</code> 或是 <code>* 項目</code> 或是 ‵<code>數字. 項目</code> (與文字間需要空一格)，還可以縮排 (使用文字編輯器時按 tab 縮排就行了)</p><ul><li>項目1</li><li>項目2</li><li>項目3</li></ul><ul><li>A</li><li>B</li><li>C</li></ul><ol><li>甲</li><li>乙</li><li>丙<ul><li>你</li><li>好</li><li>棒</li></ul></li></ol><h1 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h1><p>技術文章常需要展示代碼範例，可以用 <code>```</code> 換行後包住，來表示代碼塊，支持多種程式語言</p><p><code>```程式語言</code><br><code>```</code>  </p><p>例如使用bash的語法高亮，代碼塊結果如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#  ```bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#     ...程式碼內容</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  ```</span><br><br></code></pre></td></tr></table></figure><h1 id="超連結"><a href="#超連結" class="headerlink" title="超連結"></a>超連結</h1><p>使用 <code>[ ]</code> 包住顯示文字、與 <code>( )</code> 包住網址連結 </p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[<span class="hljs-name">顯示文字</span>](<span class="hljs-name">網址連結</span>)<br><br></code></pre></td></tr></table></figure><p>超連結 結果如下:</p><p><a href="https://markdown.tw/">顯示文字</a></p><h1 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a>圖片</h1><p>與超連結語法很像，前面多了一個 <code>!</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss">!<span class="hljs-selector-attr">[圖片失效時代替文字]</span>(圖片連結)<br><br></code></pre></td></tr></table></figure><p>圖片 結果如下:<br><img src="/%E5%9C%96%E7%89%87%E9%80%A3%E7%B5%90" alt="圖片失效時代替文字"></p><h2 id="配合google-drive-裡面的圖片"><a href="#配合google-drive-裡面的圖片" class="headerlink" title="配合google drive 裡面的圖片"></a>配合google drive 裡面的圖片</h2><p>google drive 裡面圖片的連結</p><ol><li><p>google drive 裡面圖片的連結通常會是  <strong><a href="https://drive.google.com/file/d/XXXXXX/view?usp=sharing">https://drive.google.com/file/d/XXXXXX/view?usp=sharing</a></strong> 這種格式</p></li><li><p>把網址換成 <strong><a href="https://drive.google.com/u/2/uc?id=XXXXX&export=download">https://drive.google.com/u/2/uc?id=XXXXX&amp;export=download</a></strong></p></li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">![圖片介紹](https:<span class="hljs-regexp">//</span>drive.google.com<span class="hljs-regexp">/u/</span><span class="hljs-number">2</span>/uc?id=XXXXX&amp;export=download)<br></code></pre></td></tr></table></figure><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> 列 1 </span>|<span class="hljs-string">列 2</span>|<span class="hljs-string"> 列 3 </span>|<span class="hljs-string"> 列 4 </span>|<span class="hljs-string"> 列 5 </span>|<span class="hljs-string"> 列 6 </span>|<span class="hljs-string"> 列 7 </span>|<span class="hljs-string"> 列 8 </span>|<br>|<span class="hljs-string"> ---- </span>|<span class="hljs-string">   ----   </span>|<span class="hljs-string">  ----: </span>|<span class="hljs-string"> ----  </span>|<span class="hljs-string"> ---- </span>|<span class="hljs-string"> ----  </span>|<span class="hljs-string"> ----</span>|<span class="hljs-string"> :----: </span>|<br>|<span class="hljs-string"> drwxr-xr-x. </span>|<span class="hljs-string"> 21</span>|<span class="hljs-string">rootgg</span>|<span class="hljs-string">rootgg</span>|<span class="hljs-string">4096</span>|<span class="hljs-string">Feb</span>|<span class="hljs-string">27</span>|<span class="hljs-string">13:33</span>|<br>|<span class="hljs-string"> lrwxrwxrwx. </span>|<span class="hljs-string"> 1</span>|<span class="hljs-string">root</span>|<span class="hljs-string">root</span>|<span class="hljs-string">7</span>|<span class="hljs-string">Feb</span>|<span class="hljs-string">27</span>|<span class="hljs-string">13:15</span>|<br>|<span class="hljs-string"> -rw-r-r-- </span>|<span class="hljs-string"> 1</span>|<span class="hljs-string">root</span>|<span class="hljs-string">root</span>|<span class="hljs-string">0</span>|<span class="hljs-string">Mar</span>|<span class="hljs-string">27</span>|<span class="hljs-string">13:15</span>|<br></code></pre></td></tr></table></figure><p>結果如下</p><table><thead><tr><th>列 1</th><th>列 2</th><th align="right">列 3</th><th>列 4</th><th>列 5</th><th>列 6</th><th>列 7</th><th align="center">列 8</th></tr></thead><tbody><tr><td>drwxr-xr-x.</td><td>21</td><td align="right">rootgg</td><td>rootgg</td><td>4096</td><td>Feb</td><td>27</td><td align="center">13:33</td></tr><tr><td>lrwxrwxrwx.</td><td>1</td><td align="right">root</td><td>root</td><td>7</td><td>Feb</td><td>27</td><td align="center">13:15666</td></tr><tr><td>-rw-r-r–</td><td>1</td><td align="right">root</td><td>root</td><td>0</td><td>Mar</td><td>27</td><td align="center">13:15</td></tr></tbody></table><p>排版預設向左對齊，可以調整第二行的<code>----</code>來變更</p><ul><li><code>:----</code>   左對齊</li><li><code>----:</code>    右對齊</li><li><code>:----:</code>    置中對齊</li></ul><h1 id="刪節線"><a href="#刪節線" class="headerlink" title="刪節線"></a>刪節線</h1><p>使用<code>---</code> 來表示刪節線</p><p>刪節線結果如下:</p><hr><h1 id="粗體、斜體"><a href="#粗體、斜體" class="headerlink" title="粗體、斜體"></a>粗體、斜體</h1><p><em>斜體</em><br><strong>粗體</strong><br><em><strong>粗斜體</strong></em><br><del>刪除線</del><br><u>底線</u></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="hljs-emphasis">*斜體*</span><br><span class="hljs-strong">**粗體**</span><br><span class="hljs-strong">**<span class="hljs-emphasis">*粗斜體*</span>**</span><br>~~刪除線~~<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span></span>底線<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h1 id="文字顏色"><a href="#文字顏色" class="headerlink" title="文字顏色"></a>文字顏色</h1><p>使用 <code>&lt;font&gt;</code>標籤包住文字，<code>&lt;font color=#EB5757&gt;字體顏色&lt;/font&gt;</code></p><p><font color=#EB5757>字體顏色</font></p><p>可以搭配反白文字、粗體等等使用<br><font color=#EB5757><code>字體顏色</code></font></p><p><font color=#EB5757><strong><code>字體顏色</code></strong></font></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs md"><br>搭配反白<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">#EB5757</span>&gt;</span></span><span class="hljs-code">`字體顏色`</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span><br><br>搭配粗體<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">#EB5757</span>&gt;</span></span><span class="hljs-strong">**`字體顏色`**</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>使用 <code>&gt; 文字</code> (與文字間需要空一格)</p><p>結果如下</p><blockquote><p>我把妹用這招從來沒有失敗過。    - -<em>美國隊長</em></p></blockquote><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://sam.webspace.tw/2020/01/10/Markdown%20%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95%E6%95%B4%E7%90%86/">Markdown 常用語法整理</a></p><p><a href="https://ed521.github.io/2019/08/hexo-markdown/">[教學] 撰寫 Hexo 文章 - Markdown 語法大全</a></p><p><a href="https://www.mytechgirl.com/tw/cloud/how-to-create-google-drive-online-photo-album-mtg6688.html">[實用]建立Google Drive圖床並顯示到網站上的方法</a></p><p><a href="https://theriseofdavid.github.io/2021/02/28/blog/hackmd_view_googledricePIC/">Markdown 放入 google drive 圖片</a></p>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
      <tag>網頁</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 用戶管理</title>
    <link href="/2023/08/03/linux-user-management/"/>
    <url>/2023/08/03/linux-user-management/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Linux是多用戶的操作系統，針對用戶的角色給予相對應的權限，對於維護系統的安全是非常重要的。在Linux中能夠以 <strong><code>分組</code></strong> 或是 <strong><code>針對個別用戶</code></strong> 的方式給予系統的使用權限，也能對密碼進行相關設定，包含要求 <strong><code>定期更換密碼</code></strong> 或是 <strong><code>密碼的有效期限</code></strong> ，減少用戶遭到盜用的風險。</p><h1 id="關於用戶相關的設定檔"><a href="#關於用戶相關的設定檔" class="headerlink" title="關於用戶相關的設定檔"></a>關於用戶相關的設定檔</h1><ul><li><p><code>/etc/passwd</code></p></li><li><p><code>/etc/group</code></p></li><li><p><code>/etc/shadow</code></p></li><li><p><code>/etc/login.defs</code></p></li></ul><h2 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="&#x2F;etc&#x2F;passwd"></a>&#x2F;etc&#x2F;passwd</h2><p>管理用戶資訊的地方，包含以下資訊<br>name、passwd、uid、groupid 、description 、家目錄、shell</p><p>密碼的部分因為是加密過所以會顯示x</p><h2 id="etc-group"><a href="#etc-group" class="headerlink" title="&#x2F;etc&#x2F;group"></a>&#x2F;etc&#x2F;group</h2><p>可以查看所有的群組，同時標註每個用戶是屬於哪個群組，包含以下資訊<br>groupname、grouppassword、groupid ..</p><h2 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="&#x2F;etc&#x2F;shadow"></a>&#x2F;etc&#x2F;shadow</h2><p>這個檔案存放加密過後密碼、密碼過期日、長度限制等等</p><p>可以使用 <code>grep 用戶名 /etc/shadow</code> 查看，會發現一串數字，最後幾個數字，沒有修改過的情況下預設大概會長這樣<code>0:99999:7:::</code></p><p>這幾個數字分別為 多少天不能改密碼、密碼多久時間內有效，時間到就需要修改密碼、修改密碼前的警告天數…</p><p>以下就整理<code>/etc/shadow</code> 檔案中 會顯示的資訊，這些資訊以<code>:</code>分隔，每一列代表一個使用者帳戶</p><ul><li><p>列 1：用戶名</p></li><li><p>列 2：經過加密過後的使用者密碼</p></li><li><p>列 3：上次修改密碼的日期</p></li><li><p>列 4：密碼過期期限，過期後，使用者需要修改密碼才能繼續使用帳戶。</p></li><li><p>列 5：密碼需要修改前的警告天數</p></li><li><p>列 6：密碼過期後帳戶的有效天數。</p></li><li><p>列 7：帳戶失效日期</p></li><li><p>列 8：保留欄位，這些欄位在一些系統中可能用於儲存其他額外的資訊。</p></li></ul><h2 id="etc-login-defs"><a href="#etc-login-defs" class="headerlink" title="&#x2F;etc&#x2F;login.defs"></a>&#x2F;etc&#x2F;login.defs</h2><p>用戶建立時預設使用的設置，如UID、密碼期限…，非常重要的檔案，關係到了整個系統的安全</p><h1 id="用戶管理"><a href="#用戶管理" class="headerlink" title="用戶管理"></a>用戶管理</h1><h2 id="新增用戶-useradd"><a href="#新增用戶-useradd" class="headerlink" title="新增用戶 (useradd)"></a>新增用戶 (useradd)</h2><p><code>useradd 用戶名</code></p><p>新增後會發現<code>/home</code> 多出了一個用戶的目錄</p><p>創建之後也會用戶預設會創建一個跟用戶名一樣的群組，用戶會在該群組內</p><h2 id="刪除用戶-userdel"><a href="#刪除用戶-userdel" class="headerlink" title="刪除用戶 (userdel)"></a>刪除用戶 (userdel)</h2><p>僅刪除用戶<br><code>userdel 用戶名</code></p><ul><li><code>-r</code> : 刪除用戶，同時也刪除家目錄 <code>userdel -r 用戶名</code></li></ul><h2 id="修改用戶-usermod"><a href="#修改用戶-usermod" class="headerlink" title="修改用戶 (usermod)"></a>修改用戶 (usermod)</h2><ul><li><p><code>-l</code> :  修改用戶名</p></li><li><p><code>-d</code> :  修改用戶家目錄。(登陸後所在的目錄)</p></li><li><p><code>-g</code> :  修改用戶所屬的群組。 (會讓家目錄的擁有群組改變)</p></li><li><p><code>-G</code> :  修改用戶所屬的附加群組。</p></li><li><p><code>-s</code> :  修改用戶登入後所使用的shell。</p></li><li><p><code>-m</code> :  如果修改了家目錄，同時移動用戶的家目錄內容。</p></li></ul><h3 id="新增用戶到群組"><a href="#新增用戶到群組" class="headerlink" title="新增用戶到群組"></a>新增用戶到群組</h3><p>只是讓用戶多加入一個群組，不會影響到原本用戶所在的群組</p><p><code>usermod -G 群組名  用戶名</code></p><p>會修改到用戶原本所在的群組</p><p><code>usermod -g 群組名  用戶名</code></p><h3 id="修改用戶名稱"><a href="#修改用戶名稱" class="headerlink" title="修改用戶名稱"></a>修改用戶名稱</h3><p>只會修改用戶名，其他如家目錄、群組都不會動到</p><p><code>sudo usermod -l 新用戶名 舊用戶名</code></p><p>例如 :<br><code>sudo usermod -l allynn ally</code></p><h3 id="修改家目錄"><a href="#修改家目錄" class="headerlink" title="修改家目錄"></a>修改家目錄</h3><p><code>sudo usermod -d 新目錄名稱 -m 用戶名</code></p><p>例如 :<br><code>sudo usermod -d /home/kiki -m ally</code></p><ul><li><p>目錄名稱儘量用<strong>絕對路徑</strong></p></li><li><p>使用 <code>-m</code> 會將原本內容換過去，如果想要新目錄是空的就不用加 <code>-m</code></p></li></ul><h3 id="自己的測試結果"><a href="#自己的測試結果" class="headerlink" title="自己的測試結果"></a>自己的測試結果</h3><ul><li><p><code>-m</code> 比較像是給家目錄改名，原檔名會直接被變成新檔名</p></li><li><p>有加 <code>-m</code> 新目錄名不能存在</p></li><li><p>不加 <code>-m</code> 則目錄必須存在</p></li><li><p>如果只是用 <code>-d</code> ，就什麼都沒差，只是修改用戶登陸後所在的目錄</p></li><li><p>該檔案如果一開始是由root 建立 也沒關係，使用 -d 後不會改變檔案擁有者， -d 很單純的是修改用戶登陸後所在的目錄</p></li></ul><h3 id="同時使用多個參數"><a href="#同時使用多個參數" class="headerlink" title="同時使用多個參數"></a>同時使用多個參數</h3><p><code>useradd -g student -s /bin/bash -c “smart guy” -d /home/jerry -m jerry</code></p><h1 id="群組管理"><a href="#群組管理" class="headerlink" title="群組管理"></a>群組管理</h1><h2 id="新增群組-groupadd"><a href="#新增群組-groupadd" class="headerlink" title="新增群組 (groupadd)"></a>新增群組 (groupadd)</h2><p><code>groupadd 群組名</code></p><h2 id="刪除群組-groupdel"><a href="#刪除群組-groupdel" class="headerlink" title="刪除群組 (groupdel)"></a>刪除群組 (groupdel)</h2><p><code>groupdel 群組名</code></p><h1 id="密碼管理-chage"><a href="#密碼管理-chage" class="headerlink" title="密碼管理 (chage)"></a>密碼管理 (chage)</h1><p><code>chage</code> 是針對個別用戶進行設定</p><p>如果想要對所有的用戶進行修改，可以修改<code>/etc/login.defs</code> 的內容</p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p><code>chage -m 3 -M 90 -W 5 -I 3 用戶名</code></p><ul><li><p><code>-m</code> : 設定變更密碼後，多少天以後才能再改密碼</p></li><li><p><code>-M</code> : 密碼的最大有效天數，時間到會請使用者改密碼</p></li><li><p><code>-W</code> : 密碼到期前幾天會提醒用戶</p></li><li><p><code>-I</code> : 密碼到期多少天 後，帳戶會禁用</p></li><li><p><code>-E</code> : 可以直接設定用戶帳戶的過期日期 ，格式為 <code>YYYY-MM-DD</code></p></li></ul><p>只會影響本地帳戶（非LDAP等遠程帳戶）的設置</p><h1 id="切換用戶-su"><a href="#切換用戶-su" class="headerlink" title="切換用戶 (su -)"></a>切換用戶 (su -)</h1><h3 id="切換到其他用戶"><a href="#切換到其他用戶" class="headerlink" title="切換到其他用戶"></a>切換到其他用戶</h3><p><code>su - 用戶名</code></p><h3 id="切換到root-帳號"><a href="#切換到root-帳號" class="headerlink" title="切換到root 帳號"></a>切換到root 帳號</h3><p><code>su -</code></p><p>切換到root 之後，如果想換到其他用戶，不用再輸入密碼</p><p>切換過去後可以使用 <code>exit</code> 登出</p><h1 id="root-權限-su-、-sudo"><a href="#root-權限-su-、-sudo" class="headerlink" title="root 權限 (su - 、 sudo)"></a>root 權限 (su - 、 sudo)</h1><p>root是整個操作系統中的超級用戶，擁有最高級的權限，說它系統內的神也不為過，神可以選擇要給哪個用戶自己部份的權力</p><h2 id="定義那些用戶可以使用sudo-etc-sudoers"><a href="#定義那些用戶可以使用sudo-etc-sudoers" class="headerlink" title="定義那些用戶可以使用sudo  (&#x2F;etc&#x2F;sudoers)"></a>定義那些用戶可以使用sudo  (&#x2F;etc&#x2F;sudoers)</h2><p>用戶是否可以使用sudo，都配置在 <strong><code>/etc/sudoers</code></strong></p><h3 id="修改用戶到-wheel群組"><a href="#修改用戶到-wheel群組" class="headerlink" title="修改用戶到 wheel群組"></a>修改用戶到 wheel群組</h3><p>找到 wheel 那行，會看到只要在wheel 這個群組內的用戶，都有root 權限 (可以使用 sudo 指令)</p><p><code>usermod -G wheel 用戶名</code></p><h3 id="定義個別用戶"><a href="#定義個別用戶" class="headerlink" title="定義個別用戶"></a>定義個別用戶</h3><p>找到root ALL(ALL)&#x3D;ALL 那行，在下一行新增個用戶名</p><p><code>用戶名 ALL(ALL)=ALL</code></p><h1 id="用戶監控-who、last、w、id-指令"><a href="#用戶監控-who、last、w、id-指令" class="headerlink" title="用戶監控 (who、last、w、id 指令)"></a>用戶監控 (who、last、w、id 指令)</h1><ul><li><code>who</code></li><li><code>last</code></li><li><code>w</code></li><li><code>pinky</code></li><li><code>id</code></li><li><code>users</code></li></ul><h3 id="who"><a href="#who" class="headerlink" title="who"></a>who</h3><p>查看那些人正在登錄中</p><ul><li>列 1：用戶名</li><li>列 2：終端（tty）名</li><li>列 3：登錄時間</li><li>列 4：來源 IP 地址或主機名</li></ul><h3 id="last"><a href="#last" class="headerlink" title="last"></a>last</h3><p>可以查看所有登錄過系統的歷史紀錄</p><p><strong>只看登陸名</strong></p><p><code>last | awk &#39;&#123;print $1&#125;&#39;</code> </p><p><strong>只看登陸名、排序</strong></p><p><code>last | awk &#39;&#123;print $1&#125;&#39;  | sort</code></p><p><strong>只看登陸名、排序、去重複</strong></p><p><code>last | awk &#39;&#123;print $1&#125;&#39;  | sort  |  uniq</code></p><h3 id="w"><a href="#w" class="headerlink" title="w"></a>w</h3><p>比 <code>who</code> 更詳細一點的資訊，包含用戶正在使用的程序</p><ul><li>列 1：用戶名</li><li>列 2：TTY（終端）名</li><li>列 3：登錄時間</li><li>列 4：運行的命令或活動</li><li>列 5：JCPU（用戶和系統的 CPU 時間）</li><li>列 6：PCPU（僅用戶 CPU 時間）</li><li>列 7：用戶的活動狀態</li><li>列 8：登錄的來源 IP 地址或主機名</li></ul><h3 id="pinky"><a href="#pinky" class="headerlink" title="pinky"></a>pinky</h3><p>顯示有關用戶的一些基本信息，包括用戶名、真實姓名、登錄時間、空閒時間等。，較早版本可能使用<code>finger</code>指令 (centos 7 以前)</p><p>指令<br><code>pinky  用戶名</code></p><p>以下是一些可能顯示的列信息：</p><ul><li>列 1：用戶名</li><li>列 2：真實姓名</li><li>列 3：終端（tty）名</li><li>列 4：登錄時間</li><li>列 5：空閒時間</li><li>列 6：登錄 IP 地址或主機名</li></ul><p>如果未指定用戶名，它將默將當前登錄中的用戶顯示出來</p><h2 id="id"><a href="#id" class="headerlink" title="id"></a>id</h2><p>查看自己的資訊 (UID、組別….)</p><p><code>id</code> </p><p>查看特定用戶資訊 (UID、組別….)</p><p><code>id 用戶名</code></p><h2 id="users"><a href="#users" class="headerlink" title="users"></a>users</h2><p>查看當前登陸的用戶名</p><h1 id="與用戶對話"><a href="#與用戶對話" class="headerlink" title="與用戶對話"></a>與用戶對話</h1><ul><li><code>wall</code></li><li><code>write</code></li></ul><h2 id="wall"><a href="#wall" class="headerlink" title="wall"></a>wall</h2><p>跟所有當前登錄中的用戶廣播</p><p><code>wall</code><br>輸入指令後可以開始輸入要廣播的訊息，打完按 ctrl+D 送出</p><p>或是可以直接在後面接要廣播的訊息<br><code>wall your message</code></p><h2 id="write"><a href="#write" class="headerlink" title="write"></a>write</h2><p>跟指定用戶傳遞訊息</p><p><code>write 用戶名</code></p><p>打完按 ctrl+D 送出</p><p>或是可以直接在後面接要廣播的訊息<br><code>write 用戶名 your message</code></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 檔案權限</title>
    <link href="/2023/07/31/linux-file-access/"/>
    <url>/2023/07/31/linux-file-access/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Linux 是一個多用戶的操作系統，在眾多的使用場景中，每個用戶都有可能會對檔案進行增刪與修改，如果都給予用戶最高權限，勢必會出現重要的系統檔案被誤刪的情況，或者試想某個用戶遭到駭客盜用，駭客就能在系統上為所欲為，刪光所有檔案，不對檔案進行保護對於系統來說是個災難，因此對於每個檔案、用戶設定權限格外重要。</p><p>本文將會介紹Linux 系統中，針對檔案的權限如何修改及設定。</p><h1 id="檔案的所有權-所有者、群組"><a href="#檔案的所有權-所有者、群組" class="headerlink" title="檔案的所有權 (所有者、群組)"></a>檔案的所有權 (所有者、群組)</h1><p>每個檔案都有2種類型的所有權 (ownership)</p><ul><li>user  :  擁有者</li><li>group  :  擁有群組</li></ul><h2 id="修改檔案的擁有者-chown"><a href="#修改檔案的擁有者-chown" class="headerlink" title="修改檔案的擁有者 (chown)"></a>修改檔案的擁有者 (chown)</h2><p>只有文件擁有者、系統管理員帳號可以修改</p><p><code>chown 新的擁有者 檔名</code></p><p>例如 : <code>chown austin72905 test-right</code></p><p><code>chown -R</code>  :  會對該目錄裡面所有的檔案進行遞歸修改權限</p><h2 id="修改檔案的擁有群組-chgrp"><a href="#修改檔案的擁有群組-chgrp" class="headerlink" title="修改檔案的擁有群組 (chgrp)"></a>修改檔案的擁有群組 (chgrp)</h2><p>只有文件擁有者、系統管理員帳號可以修改</p><p><code>chgrp 新的擁有全組 檔名</code></p><p>例如 : <code>chown austin72905 test-right</code></p><h1 id="檔案權限"><a href="#檔案權限" class="headerlink" title="檔案權限"></a>檔案權限</h1><p>只有文件擁有者、系統管理員帳號可以修改</p><p>每個檔案有 3  種類型的權限</p><ul><li>r  :  讀，沒有此權限無法 <code>ls</code> 查看目錄裡的文件</li><li>w  :  寫，沒有此權限無法修改、刪除檔案</li><li>x  :  執行，沒有此權限無法<code>cd</code> 進入該目錄</li></ul><p>3 種權限針對不同的對象</p><ul><li>u  :  擁有者 (user)</li><li>g  :  擁有群組 (group)</li><li>o  :  其他人 (other)，系統上其他的一般使用者</li></ul><h3 id="如何查看檔案權限"><a href="#如何查看檔案權限" class="headerlink" title="如何查看檔案權限 ?"></a>如何查看檔案權限 ?</h3><p>使用<code>ls -l</code> 可以看到 類似於 <code>drwxr-xr-x</code> 的一串英文字共10個字符，把它拆成 1、3、3、3 的方式查看</p><table><thead><tr><th>檔案類型</th><th>擁有者權限</th><th>擁有群組權限</th><th>其他人權限</th></tr></thead><tbody><tr><td>d</td><td>rwx</td><td>r-x</td><td>r-x</td></tr></tbody></table><p>由上方範例可知該檔案</p><ul><li>是一個目錄</li><li>擁有者權限 : 讀、寫、執行</li><li>擁有群組權限 : 讀、執行 (-代表沒有該權限)</li><li>其他人權限 : 讀、執行 (-代表沒有該權限)</li></ul><h2 id="修改檔檔案權限-chmod"><a href="#修改檔檔案權限-chmod" class="headerlink" title="修改檔檔案權限 (chmod)"></a>修改檔檔案權限 (chmod)</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用 +-"></a>使用 +-</h3><p>針對對象<code>u、g、o</code>，加上或減少<code>+-</code>，讀寫執行權限<code>rwx</code></p><p><code>chmod (ugo)(+-)(rwx) 檔名</code></p><p>給檔案的 擁有者 去掉 <code>寫</code> 權限</p><p><code>chmod u-w 檔名</code></p><p>給檔案 的 擁有者 加上 <code>寫</code> 跟 <code>執行</code> 權限</p><p><code>chmod u+rw 檔名</code></p><p>給檔案 的 擁有者、擁有群組 加上 <code>寫</code> 跟 <code>執行</code> 權限</p><p><code>chmod ug+rw 檔名</code></p><h3 id="使用-數字"><a href="#使用-數字" class="headerlink" title="使用 數字"></a>使用 數字</h3><p>修改順序為 ugo</p><p>代表數字</p><ul><li><p>4 : r</p></li><li><p>2: w</p></li><li><p>1: u</p></li></ul><p>所以要給一個檔案的擁有者 讀+寫 權限  4+2 &#x3D; 6，給0就是關掉該權限，其他的數字都是由這三個數字相加而來</p><p><code>chmod 600 檔名</code></p><p>上面的範例 擁有者 有 讀+寫 權限 (4+2)，擁有群組、其他人完全沒有權限 (0)</p><p>還有一個常見範例，權限全開<br><code>chmod 777 檔名</code></p><p><code>chmod -R</code> :  會對該目錄裡面所有的檔案進行遞歸修改權限</p><h1 id="針對特定用戶-or-特定群組設定權限-ACL"><a href="#針對特定用戶-or-特定群組設定權限-ACL" class="headerlink" title="針對特定用戶 or 特定群組設定權限 (ACL)"></a>針對特定用戶 or 特定群組設定權限 (ACL)</h1><p>運行級別比 檔案權限還高</p><p>假設只想要給某個用戶有讀寫的權限，一般用戶只有讀權限，就可以使用ACL，給予單獨的用戶或群組設定權限</p><h2 id="設定權限-setfacl"><a href="#設定權限-setfacl" class="headerlink" title="設定權限 (setfacl)"></a>設定權限 (setfacl)</h2><p>(set file acl)</p><p><code>setfacl -m u:用戶名:權限 檔名</code></p><p><code>setfacl -m g:群組名:權限 檔名</code></p><p>例如</p><p><code>setfacl -m u:test:rw test-right</code></p><p><code>setfacl -m g:test:rw test-right</code></p><p>針對目錄和 子目錄 跟 子文件 遞歸設定</p><p><code>setfacl -Rm u:用戶名:權限 檔名</code></p><h3 id="刪除某個用戶的權限-x"><a href="#刪除某個用戶的權限-x" class="headerlink" title="刪除某個用戶的權限 (-x)"></a>刪除某個用戶的權限 (-x)</h3><p><code>setfacl -x u:用戶名 檔名</code></p><h3 id="刪除所有的acl-權限-b"><a href="#刪除所有的acl-權限-b" class="headerlink" title="刪除所有的acl 權限 (-b)"></a>刪除所有的acl 權限 (-b)</h3><p><code>setfacl -b  檔名</code></p><h2 id="獲取權限-getfacl"><a href="#獲取權限-getfacl" class="headerlink" title="獲取權限 (getfacl)"></a>獲取權限 (getfacl)</h2><p>(get file acl)</p><p><code>getfacl 檔名</code></p><h2 id="未設定前"><a href="#未設定前" class="headerlink" title="未設定前"></a>未設定前</h2><pre><code class="hljs"># file: 檔名# owner: 擁有者# group: 擁有群組user::rw-group::r--mask::r--other::r--</code></pre><hr><h2 id="設定後，會發現多個一個特別用戶的權限"><a href="#設定後，會發現多個一個特別用戶的權限" class="headerlink" title="設定後，會發現多個一個特別用戶的權限"></a>設定後，會發現多個一個特別用戶的權限</h2><pre><code class="hljs"># file: 檔名# owner: 擁有者# group: 擁有群組user::rw-user:特別用戶:rw-group::r--mask::r--other::r--</code></pre><hr><p>mask作用</p><ul><li><p>mask 表示在 ACL 中的使用者權限或群組權限的最大權限值，用於限制 ACL 權限的有效性</p></li><li><p>mask 的值在設置 ACL 時會自動計算，通常不需要手動更改。</p></li><li><p>雖然 擁有者 和群組 本來應該有讀取和寫入權限（rw-），但由於 mask 設置為 r–，所以實際有效的權限為 r–，即只有讀取權限。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 文件系統</title>
    <link href="/2023/07/30/linux-filesystem/"/>
    <url>/2023/07/30/linux-filesystem/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Linux 中每個目錄都有其各自的作用，有些目錄也有限制訪問權限，所以安裝軟體時還是別隨心所欲地亂放，記得第一次使用時安裝nginx，竟然把它放在<code>/etc</code> 目錄下，因為些權限問題而啟動時遇到困難。今天就整理一下常見目錄的作用，以及常用操作目錄及文件的指令。</p><h1 id="目錄作用"><a href="#目錄作用" class="headerlink" title="目錄作用"></a>目錄作用</h1><ul><li><p><code>/boot</code> : 存放系統開機時必要的文件</p></li><li><p><code>/root</code> : root user 的家目錄，不等同於 “&#x2F;”</p></li><li><p><code>/dev</code> : 硬體設備(keyboard、mouse)的操作文件</p></li><li><p><code>/etc</code> : 存放<font color=#EB5757>配置文件</font>(如:DNS、某個應用的配置檔)</p></li><li><p><code>/bin</code> ⇒ <code>/usr/bin</code> : 這兩個目錄都是存放常見且通用的系統命令，(如 ls（列出目錄內容）、cp（複製文件）、mv（移動文件）等)</p></li><li><p><code>/sbin</code>⇒ <code>/usr/sbin</code> : 存放系統管理員使用的系統級命令，(ifconfig（設置網絡接口）、fdisk（磁盤分割工具）、mount（掛載文件系統）等)</p></li><li><p><code>/opt</code> : (optional)用來存放第三方軟體</p></li><li><p><code>/proc</code> : 是一種虛擬文件系統，<font color=#EB5757>紀錄正在運行中的進程文件</font>，也能查看目前的硬體訊息如CPU，如果停止運行裡面文件就會消失，這些文件只存在於記憶體中</p></li><li><p><code>/lib</code> ⇒ <code>/usr/lib</code> : 所有<font color=#EB5757>C 語言的依賴包</font>都存在這裡，如使用的那些cmd 是用C 語言寫的，他的依賴包就是存在這個資料夾，可以用 strace -e open pwd  就可以看這個指令使用的依賴包有哪些</p></li><li><p><code>/tmp</code> : 檔案暫時存放區</p></li><li><p><code>/home</code> : 用戶的家目錄，裡面會有所有用戶的家目錄(除了root)</p></li><li><p><code>/var</code> : 系統的log 存放區</p></li><li><p><code>/run</code> : 它主要用於存放在系統開機期間需要在運行時創建的臨時運行時檔案（runtime files）。&#x2F;run 目錄通常用於<font color=#EB5757>存放正在運行的系統和服務的狀態資訊、進程檔案、socket 檔案</font>等。這些檔案在系統重新開機後會被清理，因為 &#x2F;run 目錄是一個暫存的文件系統，它存在於記憶體中，而不是永久存儲在硬碟上。裡面有PID 文件，用于存储进程的 PID（Process ID）信息</p></li><li><p><code>/mnt</code> : 可以用來掛載其他的文件系統</p></li><li><p><code>/media</code> : 可以用來<font color=#EB5757>掛載可移動裝置</font>，包括 USB 驅動器、光碟、SD 卡、移動硬碟等</p></li><li><p><code>/usr</code> : 存放使用者相關的應用程式和檔案，通常被稱為 “Unix System Resources” 或 “User System Resources</p><ul><li><p><code>/usr/bin</code> : 存放大部分使用者可執行的命令和應用程式，包括系統自帶的工具和第三方軟體。例如，ls、cp、mv 等常用命令就位於 &#x2F;usr&#x2F;bin 目錄下。</p></li><li><p><code>/usr/local</code> : 通常被用於<font color=#EB5757>安裝本地使用者自己編譯的軟體</font>，目錄下通常包含 bin、lib、include 等子目錄，類似於 &#x2F;usr 目錄的結構。</p></li><li><p><code>/usr/share</code> : 共享的資料檔案，例如文件、幫助檔案、圖示。</p></li><li><p><code>/usr/lib</code> : 存放系統和應用程式所使用的共享庫檔案（shared libraries）</p></li></ul></li></ul><h1 id="檔案屬性"><a href="#檔案屬性" class="headerlink" title="檔案屬性"></a>檔案屬性</h1><table><thead><tr><th>Type</th><th># of links</th><th>Owner</th><th>Group</th><th>Size</th><th>Month</th><th>Day</th><th>Time</th><th>Name</th></tr></thead><tbody><tr><td>drwxr-xr-x.</td><td>21</td><td>root</td><td>root</td><td>4096</td><td>Feb</td><td>27</td><td>13:33</td><td>var</td></tr><tr><td>lrwxrwxrwx.</td><td>1</td><td>root</td><td>root</td><td>7</td><td>Feb</td><td>27</td><td>13:15</td><td>bin</td></tr><tr><td>-rw-r-r–</td><td>1</td><td>root</td><td>root</td><td>0</td><td>Mar</td><td>27</td><td>13:15</td><td>test</td></tr></tbody></table><ul><li><code>Type</code>  :  檔案的類型 與 相關權限</li><li><code># of links</code> : 該檔案有幾個硬連結，如果是目錄，就是 (該目錄+其父目錄+其子目錄)</li><li><code>Owner</code>  :  檔案擁有者</li><li><code>Group</code>  :  檔案擁有群組</li></ul><h1 id="檔案類型"><a href="#檔案類型" class="headerlink" title="檔案類型"></a>檔案類型</h1><p>使用 <code>ls -l</code> 常可以看到文件屬性前面有一段英文字如<code>-rw-r-r--</code>，其中最前面的字母代表了該檔案的類型，分別為</p><ul><li><code>d</code> : 目錄</li><li><code>l</code> : 連結</li><li><code>-</code> :  一般文件</li><li><code>s</code> : socket</li><li><code>c</code> : 裝置文件(keyboard)</li><li><code>p</code> : Name pipe</li><li><code>b</code> : block device</li></ul><h1 id="硬連結（Hard-Link）、軟連結（Soft-Link）、inode"><a href="#硬連結（Hard-Link）、軟連結（Soft-Link）、inode" class="headerlink" title="硬連結（Hard Link）、軟連結（Soft Link）、inode"></a>硬連結（Hard Link）、軟連結（Soft Link）、inode</h1><ul><li><p>inode :  檔案在磁碟上的<code>指標</code>(實際上的物理位置)，每次檢索檔案時，磁碟都會用到這組數字</p></li><li><p>硬連結（Hard Link） :  直接連到 inode ，不經過檔案，他和檔案共享同一個數據塊，所以檔案刪除或是改名，硬連結不會被影響，不可跨文件系統，當所有硬連結和原始檔案都被刪除時，才會真正釋放檔案的磁碟空間。</p></li><li><p>軟連結（Soft Link） :  像是創建檔案的捷徑，透過檔案(他指向的只是檔案的路徑，而不是真實數據)，再連到 inode， <font color=#EB5757>檔案刪除或是改名，軟連結就GG了</font>，可以跨文件系統</p></li><li><p>指令</p><ul><li><code>ln</code> : 創建硬連結</li><li><code>ln -s</code> : 創建軟連結</li></ul></li><li><p>不要在同一個目錄下創建連結</p></li></ul><p>使用連結時需要小心，以免因刪除原始檔案或連結檔案而丟失資料或引起檔案系統的混亂。同時，避免創建過多的<code>硬連結</code>，以免在刪除硬連結時不小心刪除了原始檔案。</p><h1 id="針對文件、目錄的操作"><a href="#針對文件、目錄的操作" class="headerlink" title="針對文件、目錄的操作"></a>針對文件、目錄的操作</h1><h2 id="創建檔案"><a href="#創建檔案" class="headerlink" title="創建檔案"></a>創建檔案</h2><h3 id="創建文件-touch"><a href="#創建文件-touch" class="headerlink" title="創建文件 (touch)"></a>創建文件 (touch)</h3><p>創建單一文件 <code>touch 檔名</code></p><p>例如: <code>touch test</code></p><p>創建多個文件 <code>touch 檔名1 檔名2 檔名3</code></p><p>例如: <code>touch test1 test2 test3</code></p><p>創建多文件</p><p><code>touch abc&#123;1..9&#125;.xyz</code><br>會新增 abc1.xyz、abc2.xyz … abc9.xyz 的檔案</p><h3 id="創建目錄-mkdir"><a href="#創建目錄-mkdir" class="headerlink" title="創建目錄 (mkdir)"></a>創建目錄 (mkdir)</h3><p><code>mkdir 目錄名</code></p><p>例如: <code>mkdir test-dir</code></p><h2 id="複製檔案-cp"><a href="#複製檔案-cp" class="headerlink" title="複製檔案 (cp)"></a>複製檔案 (cp)</h2><h3 id="複製文件"><a href="#複製文件" class="headerlink" title="複製文件"></a>複製文件</h3><p>複製文件 <code>cp 檔名 新檔名</code><br><code>cp test test-bak</code></p><h3 id="複製目錄"><a href="#複製目錄" class="headerlink" title="複製目錄"></a>複製目錄</h3><p>-R 代表把目錄裡面的文件也都複製一份， 他是把原目錄裡面的檔案都複製一分到新目錄名下面<br><code>cp -R 原目錄 新目錄名</code></p><p>例如: <code>cp -R test-dir test-dir-bak</code></p><h2 id="尋找檔案-find、locate"><a href="#尋找檔案-find、locate" class="headerlink" title="尋找檔案 (find、locate)"></a>尋找檔案 (find、locate)</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p><code>find 查詢的起始目錄 -name &quot;檔名&quot;</code></p><p>從當前目錄開始尋找</p><p><code>find . -name &quot;test&quot;</code></p><p>從根目錄開始尋找</p><p><code>find / -name &quot;test&quot;</code></p><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><p><code>locate 檔名</code></p><p>例如: <code>locate test</code></p><h3 id="locate-、find-差異"><a href="#locate-、find-差異" class="headerlink" title="locate 、find 差異?"></a>locate 、find 差異?</h3><ul><li><p><code>locate</code> 有維護一張表，他會直接去從表查，所以速度會比<code>find</code> 快很多，但是表如果還不是最新版本(該表是系統排程更新)，可能查詢結果不準確 (<code>updatedb</code>指令)</p></li><li><p><code>find</code> 是每次都會去文件系統查，速度較慢，但是準確</p></li></ul><h1 id="通配符-WildCards"><a href="#通配符-WildCards" class="headerlink" title="通配符  (WildCards)"></a>通配符  (WildCards)</h1><p>通配符是用於匹配檔案名或目錄名的特殊字符，常用於需要批量操作一些檔名很類似， abc1、abc2、abc3…abc99，如日誌檔</p><p>可以快速搜尋符合條件的檔案，並執行相對應動作，很大的提高工作效率，常用的通配符有以下幾種</p><ul><li><p><code>*</code>  :  用來匹配0~ 多個字符，如想要找出所有的txt結尾的檔案， 可以用<code>*.txt</code>表示</p></li><li><p><code>?</code> :  匹配1個字符，如想要找出 ab1、ab2、ab3…ab9 等 ab開頭，結果只有一個字符的檔案，可以用<code>ab?</code>表示</p></li><li><p><code>[ ]</code> :  指定一個字符集合 例如含有x或y的檔名，可以用<code>*[xy]*</code>表示</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github 上實用的小技巧</title>
    <link href="/2023/07/27/awesome-skill-in-github/"/>
    <url>/2023/07/27/awesome-skill-in-github/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Github 是一個代碼的存儲庫，上面有許多優秀的開源方案，有時想要搜尋符合自己需求的專案，搜尋結果可能包含多種程式語言，或是代碼庫早已沒有維護。</p><p>就算找到了符合自己需求的代碼庫，每次想要查看他的源代碼都需要下載到本地，本次就來介紹一些實用的技巧，提高查看源代碼時的體驗。</p><h1 id="搜尋代碼庫技巧"><a href="#搜尋代碼庫技巧" class="headerlink" title="搜尋代碼庫技巧"></a>搜尋代碼庫技巧</h1><h2 id="進階搜索"><a href="#進階搜索" class="headerlink" title="進階搜索"></a>進階搜索</h2><p>可以直接搜尋 <code>https://github.com/search/advanced</code>，進入進階搜索的頁面，</p><p>也可以直接使用快捷鍵<code>s</code>，開啟github 高級搜索功能，可以自行輸入語句設定搜索條件，這邊介紹幾個常用的語法</p><h3 id="設定星星數"><a href="#設定星星數" class="headerlink" title="設定星星數"></a>設定星星數</h3><ul><li><code>mitm stars:&gt;500</code> (內容包含mitm)</li></ul><h3 id="設定語言"><a href="#設定語言" class="headerlink" title="設定語言"></a>設定語言</h3><ul><li><code>mitm language:Go</code></li><li><code>mitm language:Go language:JAVA</code>  (使用 JAVA、Go 寫的)</li></ul><h3 id="設定代碼庫更新時間，可以用來看存儲庫是否還有在維護"><a href="#設定代碼庫更新時間，可以用來看存儲庫是否還有在維護" class="headerlink" title="設定代碼庫更新時間，可以用來看存儲庫是否還有在維護"></a>設定代碼庫更新時間，可以用來看存儲庫是否還有在維護</h3><ul><li><code>mitm pushed:&gt;2020-01-01</code></li></ul><h3 id="指定欄位"><a href="#指定欄位" class="headerlink" title="指定欄位"></a>指定欄位</h3><ul><li><code>mitm in:name</code>  (指定倉庫名稱包含mitm)</li></ul><h3 id="同時設定多個條件"><a href="#同時設定多個條件" class="headerlink" title="同時設定多個條件"></a>同時設定多個條件</h3><ul><li><code>mitm in:name stars:&gt;500 language:Go  pushed:&gt;2020-01-01</code></li></ul><h1 id="代碼查看技巧"><a href="#代碼查看技巧" class="headerlink" title="代碼查看技巧"></a>代碼查看技巧</h1><h2 id="存儲庫內常用快捷鍵"><a href="#存儲庫內常用快捷鍵" class="headerlink" title="存儲庫內常用快捷鍵"></a>存儲庫內常用快捷鍵</h2><h3 id="在代碼庫搜尋文件"><a href="#在代碼庫搜尋文件" class="headerlink" title="在代碼庫搜尋文件"></a>在代碼庫搜尋文件</h3><p>使用<code>T</code>快捷鍵，可以在代碼庫進行全文件搜索，在那種目錄包很多層的代碼庫中尤其好用</p><h3 id="快速跳到某一行"><a href="#快速跳到某一行" class="headerlink" title="快速跳到某一行"></a>快速跳到某一行</h3><p>使用<code>L</code> 快捷鍵</p><h3 id="查看某文件的改動紀錄"><a href="#查看某文件的改動紀錄" class="headerlink" title="查看某文件的改動紀錄"></a>查看某文件的改動紀錄</h3><p>使用<code>B</code> 快捷鍵</p><h2 id="線上開啟vscode-編輯器"><a href="#線上開啟vscode-編輯器" class="headerlink" title="線上開啟vscode 編輯器"></a>線上開啟vscode 編輯器</h2><p>使用<code>.</code>快捷鍵，github會開啟一個線上vscode 編輯器，就不用每次都要下載源代碼到本地，還可以在線上安裝plugin，但語言的標準庫就不像本地一樣方便，可以直接查看內容</p><h3 id="使用-alt"><a href="#使用-alt" class="headerlink" title="使用 alt + &lt;- (左方向建) 可以回到上一頁"></a>使用 alt + &lt;- (左方向建) 可以回到上一頁</h3><p>這個是vscode 提供的快捷鍵功能</p><h1 id="線上運行代碼"><a href="#線上運行代碼" class="headerlink" title="線上運行代碼"></a>線上運行代碼</h1><p>在網址前墜加上 <code>gitpod.io/#</code></p><p>如<br><code>https://github.com/owner/repository</code><br>改成<br><code>https://gitpod.io/#/github.com/owner/repository</code></p><p>會開啟gitpod 線上運行環境的功能，自動安裝目前項目需要的依賴包，並可自行輸入command line，在網頁上查看代碼執行的效果，這部分我沒有嘗試，有興趣的可以自行試試看。</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://www.youtube.com/watch?v=yoRxfPfFOh8&t=20s">5个隐藏的GitHub神技巧，助你秒变大佬！</a><br><a href="https://zhuanlan.zhihu.com/p/347723938">21个GitHub精准搜索的神仙技巧</a><br><a href="https://docs.github.com/en/search-github/github-code-search/understanding-github-code-search-syntax">github搜尋語法官方文檔</a></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安裝golang (ubuntu 20.04)</title>
    <link href="/2023/07/21/install-golang/"/>
    <url>/2023/07/21/install-golang/</url>
    
    <content type="html"><![CDATA[<h2 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h2><ol><li>到官網連結安裝，(官網連結可以能會修改)，安裝的版本選 amd64</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://go.dev/dl/go1.20.6.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><ol start="2"><li>解壓縮到 <code>/usr/local</code>，解壓縮完會發現  &#96;&#x2F;usr&#x2F;local&#96;&#96; 多了一個go 目錄</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -C 解壓縮的目標目錄</span><br>sudo tar -C /usr/local -xzf go1.20.6.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><ol start="3"><li>在 <code>/etc/profile</code> 檔案 新增 go 的 環境變數</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 編輯 /etc/profile</span><br>sudo vi /etc/profile<br><br><span class="hljs-comment"># 在檔案中新增這行</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/local/go/bin <br></code></pre></td></tr></table></figure><ol start="4"><li>刷新當前shell環境，獲取到&#x2F;etc&#x2F;profile最新的配置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><ol start="5"><li>也可以修改~&#x2F;.profile</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi ~/.profile<br><br><span class="hljs-comment"># 在檔案中新增這行</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/local/go/bin <br><br><span class="hljs-comment"># 刷新當前shell環境</span><br><span class="hljs-built_in">source</span> ~/.profile<br></code></pre></td></tr></table></figure><ol start="6"><li>檢查下是否安裝成功<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">go version<br><br><span class="hljs-comment"># 應該會出現</span><br>go version go1.20.6 linux/amd64<br></code></pre></td></tr></table></figure></li></ol><p>關掉 cmd 後可能會出現”無法找到go 指令”，可以重啟VM 試試</p><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><p><a href="https://quietbo.com/2022/07/21/golang-%E5%AE%89%E8%A3%9D-windows-ubuntu20-04/">[Golang] 安裝 (Windows &amp; ubuntu20.04)</a></p><p><a href="https://www.linuxprobe.com/linux-source-useful.html">Linux中source命令的使用方式</a></p>]]></content>
    
    
    <categories>
      
      <category>golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>將Hexo Blog 部屬到github pages 上</title>
    <link href="/2023/07/17/deploy-to-github-page/"/>
    <url>/2023/07/17/deploy-to-github-page/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>撰寫完文章後，下一步就是將網站部屬到github pages上了，github 除了可以存放代碼之外，還提供讓你免費部屬靜態網站的功能，<br>但還是有一些限制，如respository 容量只能到1G，但在初期文章數量不多時，是個好選擇。</p><p>官方提供了兩種部屬方式</p><h2 id="步驟-使用一鍵部屬"><a href="#步驟-使用一鍵部屬" class="headerlink" title="步驟 (使用一鍵部屬)"></a>步驟 (使用一鍵部屬)</h2><ol><li>創建repository，並將hexo 專案推上去，預設<code>public</code>目錄不會被推上去</li></ol><p>會有兩種域名呈現方式</p><ul><li><username>.github.io</li><li><username>.github.io&#x2F;repositoryName</li></ul><p>如果想要讓blog的域名以 <code>username</code>.github.io 呈現，那在創建repository時，repository名稱要取為 <code>username</code>.github.io ，<code>username</code>為github帳號名 如: austin72905.github.io</p><p>如果是<code>username</code>.github.io&#x2F;repositoryName呈現方式，在創建repository時，名稱任意。</p><ol start="2"><li>將<code>_config.yml</code> 修改:</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:austin72905/austin72905.github.io.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span> <span class="hljs-comment"># 指定github pages 編譯的分支，不要使用master</span><br><br></code></pre></td></tr></table></figure><p><em><strong>branch分支不要指定master!!</strong></em><br>如果branch指定master，hexo 專案會把<code>public</code>目錄的內容推到master 上，蓋掉你原本推上去的內容，這樣其他的檔案就無法做版本控制了</p><ul><li>master : 未打包的原始碼</li><li>gh-pages : 打包過後的靜態文件</li></ul><p>github pages 編譯時針對gh-pages 上的文件進行編譯</p><ol start="3"><li>下載一鍵部屬套件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><ol start="4"><li>部屬</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p>透過 hexo 一鍵部屬套件部屬後，未來更新代碼推上git後，還是需要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g <span class="hljs-comment"># 生成靜態文件</span><br>hexo d <span class="hljs-comment"># 部屬</span><br></code></pre></td></tr></table></figure><p>將新代碼部屬上去。</p><p>如果要使用Github Action實現持續部屬(CD)的功能，需要使用Hexo 官方提供的另一種方式。</p><h2 id="步驟-使用Github-Action-部屬到Github-Pages-推薦"><a href="#步驟-使用Github-Action-部屬到Github-Pages-推薦" class="headerlink" title="步驟 (使用Github Action 部屬到Github Pages) (推薦)"></a>步驟 (使用Github Action 部屬到Github Pages) (推薦)</h2><ol><li>創建github repository</li></ol><p>同一鍵部屬步驟1，依照需求調整repository名稱，如: <code>username</code>.github.io</p><ol start="2"><li><p>在hexo 專案中建立<code>.github/workflows/pages.yml</code></p></li><li><p>查看你的node 版本</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node --version  <span class="hljs-comment"># 得到的結果會類似 (v16.5.3)</span><br></code></pre></td></tr></table></figure><ol start="4"><li>將以下內容貼到<code>.github/workflows/pages.yml</code>， (將 <code>16</code> 替換為上個步驟中記下的版本)</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Pages</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">main</span>  <span class="hljs-comment"># default branch，或是master</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">pages:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">permissions:</span><br>      <span class="hljs-attr">contents:</span> <span class="hljs-string">write</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-comment"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br>          <span class="hljs-attr">submodules:</span> <span class="hljs-string">recursive</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-number">16.</span><span class="hljs-string">x</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;16&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">NPM</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.OS</span> <span class="hljs-string">&#125;&#125;-npm-cache</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Dependencies</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">run</span> <span class="hljs-string">build</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">github_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">publish_dir:</span> <span class="hljs-string">./public</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>將hexo 專案推上去，預設<code>public</code>目錄不會被推上去</p></li><li><p>在儲存庫中前往 <strong>Settings</strong> &gt; <strong>Pages</strong> &gt; <strong>Source</strong>，並將 branch 改為 gh-pages</p></li></ol><p>使用此方式，未來只要有新代碼推上去，就會自動觸發Github Action，將Github Pages 上的網站重新編驛更新。</p><h2 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h2><p><a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/about-github-pages">github pages文檔</a></p><p><a href="https://hexo.io/zh-tw/docs/github-pages">在 GitHub Pages 上部署 Hexo</a></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 主題修改(Fluid)</title>
    <link href="/2023/07/17/hexo-theme-modify/"/>
    <url>/2023/07/17/hexo-theme-modify/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>配置完hexo 主題後，發現很多地方跟自己想要呈現的方式不太一樣，這邊就要來客製化一下了，介紹常見的修改</p><p>配置文件都在<code>themes</code> 目錄中<code>fluid/_config.yml</code>。</p><h2 id="整個頁面"><a href="#整個頁面" class="headerlink" title="整個頁面"></a>整個頁面</h2><h3 id="修改左上角，blog-的名稱"><a href="#修改左上角，blog-的名稱" class="headerlink" title="修改左上角，blog 的名稱"></a>修改左上角，blog 的名稱</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%8D%9A%E5%AE%A2%E6%A0%87%E9%A2%98">博客标题</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">navbar:<br>    blog_title: blog標題<br></code></pre></td></tr></table></figure><h3 id="修改右上角，巡航列的標題"><a href="#修改右上角，巡航列的標題" class="headerlink" title="修改右上角，巡航列的標題"></a>修改右上角，巡航列的標題</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%AF%BC%E8%88%AA%E8%8F%9C%E5%8D%95">巡航菜單</a></p><p>可以看到文檔說明<code>key</code> 用于关联有语言配置，如不存在关联则显示 key 本身的值，<br>在這邊修改key的話，在文章內頁標題的文字不會改變。</p><p>如:我想要把”歸檔”兩個字，修改為”全部文章”，當導覽到全部文章頁面時，標題也要顯示全部文章，要達成此效果<br>要直接修改<code>languages/zh-TW.yml</code><br>修改完如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">archive:</span><br>    <span class="hljs-attr">menu:</span> <span class="hljs-string">&#x27;全部文章&#x27;</span><br>    <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;全部文章&#x27;</span><br>    <span class="hljs-attr">subtitle:</span> <span class="hljs-string">&#x27;全部文章&#x27;</span><br>    <span class="hljs-attr">post_total:</span> <span class="hljs-string">&#x27;共有 %d 篇文章&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="主頁"><a href="#主頁" class="headerlink" title="主頁"></a>主頁</h2><h3 id="修改主頁的slogan"><a href="#修改主頁的slogan" class="headerlink" title="修改主頁的slogan"></a>修改主頁的slogan</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#slogan-%E6%89%93%E5%AD%97%E6%9C%BA">修改slogan</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>    <span class="hljs-attr">slogan:</span><br>        <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">text:</span> <span class="hljs-string">修改成你要的slogan</span><br></code></pre></td></tr></table></figure><h3 id="修改頁面頂部大圖"><a href="#修改頁面頂部大圖" class="headerlink" title="修改頁面頂部大圖"></a>修改頁面頂部大圖</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E9%A1%B5%E9%9D%A2%E9%A1%B6%E9%83%A8%E5%A4%A7%E5%9B%BE">修改頁面頂部大圖</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>    <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span> <span class="hljs-comment"># 修改圖片高度</span><br></code></pre></td></tr></table></figure><h2 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h2><h3 id="footer-文字"><a href="#footer-文字" class="headerlink" title="footer 文字"></a>footer 文字</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">footer:</span><br>    <span class="hljs-attr">content:</span><br>    <span class="hljs-string">`</span><br>    <span class="hljs-string">內容</span><br>    <span class="hljs-string">`</span><br><br></code></pre></td></tr></table></figure><h2 id="文章內頁"><a href="#文章內頁" class="headerlink" title="文章內頁"></a>文章內頁</h2><h3 id="文章頁顯示訊息-字數、日期"><a href="#文章頁顯示訊息-字數、日期" class="headerlink" title="文章頁顯示訊息(字數、日期..)"></a>文章頁顯示訊息(字數、日期..)</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E6%97%A5%E6%9C%9F-%E5%AD%97%E6%95%B0-%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF-%E9%98%85%E8%AF%BB%E6%95%B0">日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>    <span class="hljs-attr">meta:</span><br>        <span class="hljs-attr">author:</span>  <span class="hljs-comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span><br>            <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">date:</span>  <span class="hljs-comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span><br>            <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;dddd, MMMM Do YYYY, h:mm a&quot;</span>  <span class="hljs-comment"># 格式参照 ISO-8601 日期格式化</span><br>        <span class="hljs-attr">wordcount:</span>  <span class="hljs-comment"># 字数统计</span><br>            <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 字&quot;</span>  <span class="hljs-comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span><br>        <span class="hljs-attr">min2read:</span>  <span class="hljs-comment"># 阅读时间</span><br>            <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 分钟&quot;</span><br>        <span class="hljs-attr">views:</span>  <span class="hljs-comment"># 阅读次数</span><br>            <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>  <span class="hljs-comment"># 统计数据来源，可选：leancloud | busuanzi   注意不蒜子会间歇抽风</span><br>            <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span><br></code></pre></td></tr></table></figure><h3 id="代碼塊不顯示使用語言"><a href="#代碼塊不顯示使用語言" class="headerlink" title="代碼塊不顯示使用語言"></a>代碼塊不顯示使用語言</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E4%BB%A3%E7%A0%81%E5%9D%97">代码块</a></p><p><code>fluid/_config.yml</code>搜尋”代码块的增强配置”</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">code:</span><br>    <span class="hljs-comment"># 是否开启复制代码的按钮</span><br>    <span class="hljs-comment"># Enable copy code button</span><br>    <span class="hljs-attr">copy_btn:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 代码语言</span><br><span class="hljs-comment"># Code language</span><br><span class="hljs-attr">language:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 把它關掉</span><br>    <span class="hljs-attr">default:</span> <span class="hljs-string">&quot;TEXT&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="關於"><a href="#關於" class="headerlink" title="關於"></a>關於</h2><h3 id="關於的內容"><a href="#關於的內容" class="headerlink" title="關於的內容"></a>關於的內容</h3><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E4%BF%A1%E6%81%AF">关于信息</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br><span class="hljs-attr">avatar:</span> <span class="hljs-string">/img/avatar.png</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">&quot;你的名字&quot;</span><br><span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;你的介紹&quot;</span><br><br></code></pre></td></tr></table></figure><p>至於其他的配置，日後如果有修改的需求，會再持續記錄到此文章</p><h2 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h2><p><a href="https://hexo.fluid-dev.com/docs/guide/">fluid官方文檔</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 框架介紹</title>
    <link href="/2023/07/17/hexo-introduce/"/>
    <url>/2023/07/17/hexo-introduce/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Hexo 是一個blog 框架，用於快速產生”靜態”網站，基於 node.js，使用markdown 撰寫文章<br>以下為官網連結 <a href="https://hexo.io/zh-tw/">Hexo</a></p><h1 id="安裝流程"><a href="#安裝流程" class="headerlink" title="安裝流程"></a>安裝流程</h1><ol><li><p>首先要先安裝node.js</p></li><li><p>安裝hexo cli，才能使用hexo 指令</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><ol start="3"><li>建立blog 專案</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 沒有加&lt;folder&gt;會在當前資料夾建立hexo 專案</span><br><span class="hljs-comment"># 也可以自行指定資料夾</span><br>hexo init &lt;folder&gt;<br></code></pre></td></tr></table></figure><ol start="4"><li>運行 blog 專案</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure><p>看到專案建立起來後，接下來就可以來撰寫文章了，以下就來介紹幾個重要的文件</p><h1 id="目錄結構"><a href="#目錄結構" class="headerlink" title="目錄結構"></a>目錄結構</h1><ul><li>scaffold : 文章的範例模板</li><li>source&#x2F;_post : 文章內容所在</li><li>themes : 可以將網路上下載的主題放入此資料夾</li></ul><h1 id="文章範例"><a href="#文章範例" class="headerlink" title="文章範例"></a>文章範例</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: 標題<br><span class="hljs-built_in">date</span>:  日期 <span class="hljs-comment"># 依照文章當下新增的時間，但如果之後不小心資料損毀，就無法知道確切時間，所以建議自己打日期</span><br>tags:      <span class="hljs-comment">## 如果只有單一標籤，直接寫在貿號後面就好</span><br>    -  前端<br>---<br><br><span class="hljs-comment"># 以下開始為內文</span><br><br><span class="hljs-comment"># 這會是一個超連結</span><br>[文字](http連結)<br><br><br>`此為行內程式碼`<br><br>```使用的語言，如html<br>此為段落型程式碼<br>``` <span class="hljs-comment"># 使用兩塊 ``` 包起來</span><br><br><br><br></code></pre></td></tr></table></figure><h1 id="部屬到線上"><a href="#部屬到線上" class="headerlink" title="部屬到線上"></a>部屬到線上</h1><ol><li>編譯 blog 專案，編譯完會出現一個public 目錄</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><ol start="2"><li>只要將生成的public 資料夾，移動到任意web server 裡面，就能夠運行起來</li></ol><h1 id="部屬到github"><a href="#部屬到github" class="headerlink" title="部屬到github"></a>部屬到github</h1><h1 id="調整themes"><a href="#調整themes" class="headerlink" title="調整themes"></a>調整themes</h1><p>到網路上搜尋喜歡的主題，按照指示操作，通常都會是以下步驟</p><ol><li><p>到github 下載該主題的原始碼，下載成zip檔較好操作</p></li><li><p>將壓縮檔解壓縮，裡面的檔案放入blog 專案中 themes 目錄，並將名稱改為<code>$&#123;主題指定的名稱&#125;</code></p></li><li><p>有時會要求額外下載套件</p></li><li><p>到blog 專案根目錄的<font color=#FF2D2D><code>_config.yml</code></font>，將<code>theme</code>屬性修改為<code>$&#123;主題指定的名稱&#125;</code></p></li></ol><h2 id="實際調整範例"><a href="#實際調整範例" class="headerlink" title="實際調整範例"></a>實際調整範例</h2><p>後來看了 <a href="https://ithelp.ithome.com.tw/articles/10242172">【Day 7】如何更換 Hexo 主題</a> 的文章，決定使用<br><a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid-dev&#x2F;hexo-theme-fluid</a> 的主題，安裝文檔及修改配置的文檔都寫得很清楚。</p><p>以下是使用文檔提供的下載方式二，<br>下載 <code>最新 release 版本</code> 解壓到 <code>themes</code> 目錄，並將解壓出的文件夾重命名為 <code>fluid</code>。</p><ol><li><p>依照上面步驟建立好blog 專案</p></li><li><p>下載 <code>最新 release 版本</code> 解壓到 <code>themes</code> 目錄，並將解壓出的文件夾重命名為 <code>fluid</code>。</p></li><li><p>修改blog 專案根目錄下<code>_config.yml</code> :</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">theme : fluid <span class="hljs-comment"># 指定主題</span><br><br>language: zh-TW <span class="hljs-comment"># 指定顯示語言</span><br></code></pre></td></tr></table></figure><ol start="4"><li>原先hexo官方是沒有關於頁的，本主題有所以需要自己添加</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><p>創建成功後，在blog 專案底下<code>/source/about/index.md</code>，添加<code>layout</code> 屬性。</p><p>修改後文件內容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: about<br>layout: about<br>---<br><br><span class="hljs-comment">#底下也可以寫一些內容</span><br></code></pre></td></tr></table></figure><ol start="5"><li>重新啟動後主題就會更換</li></ol><p>如果有一些配置需要更改可以<a href="https://hexo.fluid-dev.com/docs/guide/">查看此篇記錄</a></p><p>調整blog 主題配置可能一開始比較費勁，但相比於自己從零開始搞已經節省很多的時間了，也更可以專注在寫作上，感謝開發者的貢獻。<br>看到自己的blog 有美美的主題就更有動力寫作了! 希望大家寫作愉快。</p><h1 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h1><p><a href="https://www.youtube.com/watch?v=jOJI9ekTzK8">使用 Hexo 建構個人化部落格</a></p><p><a href="https://ithelp.ithome.com.tw/articles/10242172">如何更換 Hexo 主題</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
